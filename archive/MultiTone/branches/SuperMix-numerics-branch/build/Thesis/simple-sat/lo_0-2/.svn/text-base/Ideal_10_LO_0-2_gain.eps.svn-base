%!PS-Adobe-2.0 EPSF-2.0
%%Title: Ideal_10_LO_0-2_gain.eps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Fri Sep 10 12:01:43 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 373 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -53 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse } forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
912 480 M
63 0 V
5233 0 R
-63 0 V
stroke
816 480 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.01)]
] -53.3 MRshow
grestore
1.000 UL
LTb
912 1137 M
31 0 V
5265 0 R
-31 0 V
912 1522 M
31 0 V
5265 0 R
-31 0 V
912 1795 M
31 0 V
5265 0 R
-31 0 V
912 2007 M
31 0 V
5265 0 R
-31 0 V
912 2179 M
31 0 V
5265 0 R
-31 0 V
912 2326 M
31 0 V
5265 0 R
-31 0 V
912 2452 M
31 0 V
5265 0 R
-31 0 V
912 2564 M
31 0 V
5265 0 R
-31 0 V
912 2664 M
63 0 V
5233 0 R
-63 0 V
stroke
816 2664 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.1)]
] -53.3 MRshow
grestore
1.000 UL
LTb
912 3321 M
31 0 V
5265 0 R
-31 0 V
912 3706 M
31 0 V
5265 0 R
-31 0 V
912 3979 M
31 0 V
5265 0 R
-31 0 V
912 4191 M
31 0 V
5265 0 R
-31 0 V
912 4363 M
31 0 V
5265 0 R
-31 0 V
912 4510 M
31 0 V
5265 0 R
-31 0 V
912 4636 M
31 0 V
5265 0 R
-31 0 V
912 4748 M
31 0 V
5265 0 R
-31 0 V
912 4848 M
63 0 V
5233 0 R
-63 0 V
stroke
816 4848 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MRshow
grestore
1.000 UL
LTb
912 480 M
0 63 V
0 4305 R
0 -63 V
stroke
912 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
grestore
1.000 UL
LTb
2236 480 M
0 63 V
0 4305 R
0 -63 V
stroke
2236 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 0.5)]
] -53.3 MCshow
grestore
1.000 UL
LTb
3560 480 M
0 63 V
0 4305 R
0 -63 V
stroke
3560 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 1)]
] -53.3 MCshow
grestore
1.000 UL
LTb
4884 480 M
0 63 V
0 4305 R
0 -63 V
stroke
4884 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 1.5)]
] -53.3 MCshow
grestore
1.000 UL
LTb
6208 480 M
0 63 V
0 4305 R
0 -63 V
stroke
6208 320 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 ( 2)]
] -53.3 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
912 480 M
5296 0 V
0 4368 V
-5296 0 V
912 480 L
LTb
160 2664 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Mixer Gain)]
] -53.3 MCshow
grestore
grestore
LTb
3560 80 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (Bias Voltage)]
] -53.3 MCshow
grestore
1.000 UP
1.000 UL
LT0
LTb
5473 4705 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (V)]
[(Helvetica) 128.0 -48.0 true true 0 (LO)]
[(Helvetica) 160.0 0.0 true true 0 ( = 0.33)]
] -37.3 MRshow
grestore
LT0
5569 4705 M
447 0 V
2034 480 M
17 83 V
26 125 V
27 119 V
26 115 V
27 114 V
26 113 V
27 113 V
26 115 V
26 115 V
27 115 V
26 116 V
27 115 V
26 112 V
27 109 V
26 104 V
27 98 V
26 91 V
27 84 V
26 76 V
27 67 V
26 60 V
27 52 V
26 46 V
27 42 V
26 38 V
27 38 V
26 41 V
27 46 V
26 55 V
27 66 V
26 75 V
27 84 V
26 88 V
26 86 V
27 75 V
26 58 V
27 34 V
26 7 V
27 -24 V
26 -58 V
27 -93 V
26 -130 V
27 -168 V
26 -205 V
27 -241 V
26 -276 V
27 -307 V
26 -336 V
27 -359 V
26 -379 V
27 -397 V
7 -117 V
540 0 R
9 55 V
26 139 V
27 111 V
26 84 V
27 59 V
26 34 V
27 10 V
26 -12 V
27 -33 V
26 -52 V
27 -69 V
26 -84 V
26 -96 V
27 -105 V
10 -41 V
1.000 UL
LT1
LTb
5473 4545 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (V)]
[(Helvetica) 128.0 -48.0 true true 0 (LO)]
[(Helvetica) 160.0 0.0 true true 0 ( = 0.67)]
] -37.3 MRshow
grestore
LT1
5569 4545 M
447 0 V
1212 480 M
18 112 V
26 162 V
27 154 V
26 146 V
27 139 V
26 132 V
27 125 V
26 116 V
27 109 V
26 100 V
27 92 V
26 83 V
27 76 V
26 69 V
26 62 V
27 56 V
26 51 V
27 48 V
26 45 V
27 45 V
26 45 V
27 47 V
26 50 V
27 53 V
26 57 V
27 59 V
26 62 V
27 63 V
26 61 V
27 59 V
26 55 V
27 50 V
26 43 V
27 35 V
26 28 V
27 21 V
26 14 V
27 8 V
26 4 V
26 3 V
27 5 V
26 8 V
27 15 V
26 24 V
27 33 V
26 43 V
27 50 V
26 55 V
27 57 V
26 55 V
27 49 V
26 41 V
27 30 V
26 17 V
27 3 V
26 -11 V
27 -24 V
26 -35 V
27 -44 V
26 -49 V
27 -48 V
26 -40 V
27 -25 V
26 -3 V
26 26 V
27 58 V
26 91 V
27 118 V
26 135 V
27 136 V
26 123 V
27 94 V
26 54 V
27 5 V
26 -48 V
27 -104 V
26 -159 V
27 -213 V
26 -263 V
27 -309 V
26 -349 V
27 -383 V
26 -410 V
27 -436 V
26 -461 V
27 -493 V
7 -157 V
280 0 R
4 55 V
26 318 V
27 266 V
26 222 V
27 182 V
26 144 V
27 108 V
26 75 V
27 43 V
26 13 V
27 -13 V
26 -37 V
27 -55 V
26 -69 V
stroke
4116 1732 M
27 -76 V
26 -80 V
27 -77 V
26 -71 V
26 -62 V
27 -54 V
26 -45 V
27 -38 V
26 -33 V
27 -31 V
26 -30 V
27 -33 V
26 -37 V
27 -43 V
26 -49 V
27 -58 V
26 -65 V
27 -74 V
26 -83 V
27 -90 V
26 -97 V
7 -26 V
1.000 UL
LT2
LTb
5473 4385 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (V)]
[(Helvetica) 128.0 -48.0 true true 0 (LO)]
[(Helvetica) 160.0 0.0 true true 0 ( = 1.00)]
] -37.3 MRshow
grestore
LT2
5569 4385 M
447 0 V
1038 480 M
6 105 V
27 329 V
26 270 V
27 226 V
26 192 V
27 163 V
26 142 V
27 125 V
26 113 V
27 104 V
26 98 V
27 95 V
26 93 V
27 92 V
26 91 V
27 88 V
26 86 V
27 80 V
26 74 V
27 65 V
26 57 V
26 47 V
27 36 V
26 27 V
27 16 V
26 9 V
27 2 V
26 -2 V
27 -4 V
26 -2 V
27 2 V
26 9 V
27 18 V
26 26 V
27 35 V
26 42 V
27 46 V
26 47 V
27 46 V
26 41 V
27 34 V
26 24 V
27 14 V
26 3 V
27 -9 V
26 -20 V
26 -28 V
27 -34 V
26 -38 V
27 -36 V
26 -30 V
27 -20 V
26 -5 V
27 11 V
26 28 V
27 44 V
26 57 V
27 65 V
26 67 V
27 63 V
26 53 V
27 39 V
26 23 V
27 3 V
26 -18 V
27 -39 V
26 -58 V
27 -77 V
26 -90 V
27 -99 V
26 -101 V
26 -97 V
27 -84 V
26 -61 V
27 -32 V
26 5 V
27 44 V
26 84 V
27 117 V
26 142 V
27 153 V
26 151 V
27 133 V
26 101 V
27 58 V
26 4 V
27 -57 V
26 -123 V
27 -190 V
26 -257 V
27 -318 V
26 -375 V
27 -431 V
26 -493 V
27 -571 V
26 -700 V
4 -158 V
152 0 R
3 76 V
26 452 V
27 334 V
26 250 V
stroke
3798 1592 M
27 184 V
26 129 V
27 80 V
26 38 V
27 0 V
26 -33 V
27 -58 V
26 -77 V
27 -88 V
26 -90 V
27 -83 V
26 -68 V
27 -50 V
26 -29 V
27 -9 V
26 9 V
26 23 V
27 32 V
26 35 V
27 36 V
26 31 V
27 23 V
26 14 V
27 4 V
26 -9 V
27 -21 V
26 -32 V
27 -42 V
26 -52 V
27 -59 V
26 -64 V
27 -66 V
26 -67 V
27 -66 V
26 -63 V
27 -58 V
26 -54 V
27 -50 V
26 -46 V
27 -44 V
26 -42 V
26 -42 V
27 -44 V
26 -47 V
27 -52 V
26 -57 V
27 -63 V
9 -25 V
1.000 UL
LT3
LTb
5473 4225 M
gsave 0 setgray
[ [(Helvetica) 160.0 0.0 true true 0 (V)]
[(Helvetica) 128.0 -48.0 true true 0 (LO)]
[(Helvetica) 160.0 0.0 true true 0 ( = 1.33)]
] -37.3 MRshow
grestore
LT3
5569 4225 M
447 0 V
1064 480 M
7 92 V
26 291 V
27 246 V
26 208 V
27 177 V
26 151 V
27 130 V
26 115 V
27 104 V
26 98 V
27 98 V
26 99 V
27 103 V
26 108 V
27 111 V
26 115 V
27 114 V
26 111 V
27 105 V
26 95 V
26 84 V
27 71 V
26 55 V
27 40 V
26 26 V
27 11 V
26 0 V
27 -10 V
26 -16 V
27 -18 V
26 -15 V
27 -11 V
26 -1 V
27 10 V
26 22 V
27 34 V
26 43 V
27 49 V
26 52 V
27 50 V
26 46 V
27 37 V
26 25 V
27 12 V
26 -2 V
26 -17 V
27 -31 V
26 -44 V
27 -55 V
26 -61 V
27 -65 V
26 -63 V
27 -57 V
26 -44 V
27 -28 V
26 -10 V
27 11 V
26 31 V
27 47 V
26 59 V
27 65 V
26 65 V
27 59 V
26 48 V
27 32 V
26 13 V
27 -9 V
26 -34 V
27 -58 V
26 -81 V
26 -105 V
27 -125 V
26 -142 V
27 -154 V
26 -162 V
27 -164 V
26 -159 V
27 -150 V
26 -131 V
27 -107 V
26 -76 V
27 -39 V
26 0 V
27 38 V
26 73 V
27 100 V
26 116 V
27 123 V
26 119 V
27 102 V
26 77 V
27 42 V
26 -1 V
27 -52 V
26 -108 V
26 -171 V
27 -238 V
26 -311 V
27 -393 V
26 -492 V
24 -548 V
390 0 R
10 64 V
stroke
4116 544 M
27 171 V
26 167 V
27 161 V
26 151 V
26 136 V
27 120 V
26 101 V
27 82 V
26 61 V
27 42 V
26 21 V
27 2 V
26 -14 V
27 -30 V
26 -41 V
27 -51 V
26 -55 V
27 -55 V
26 -53 V
27 -46 V
26 -37 V
27 -27 V
26 -16 V
27 -8 V
26 1 V
27 5 V
26 7 V
27 6 V
26 4 V
26 -2 V
27 -8 V
26 -16 V
27 -25 V
26 -33 V
27 -41 V
26 -48 V
27 -55 V
26 -60 V
27 -64 V
26 -65 V
27 -66 V
26 -65 V
27 -63 V
26 -60 V
27 -57 V
26 -55 V
27 -52 V
17 -34 V
1.000 UL
LTb
912 480 M
5296 0 V
0 4368 V
-5296 0 V
912 480 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
