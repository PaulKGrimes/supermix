%!PS-Adobe-2.0
%%Title: Multi_FrequencyTest1.ps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Tue Jun 29 11:39:11 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {{dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse } forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
882 420 M
63 0 V
6017 0 R
-63 0 V
stroke
798 420 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-10)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 865 M
63 0 V
6017 0 R
-63 0 V
stroke
798 865 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-09)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 1310 M
63 0 V
6017 0 R
-63 0 V
stroke
798 1310 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-08)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 1756 M
63 0 V
6017 0 R
-63 0 V
stroke
798 1756 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-07)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 2201 M
63 0 V
6017 0 R
-63 0 V
stroke
798 2201 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-06)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 2646 M
63 0 V
6017 0 R
-63 0 V
stroke
798 2646 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-05)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 3091 M
63 0 V
6017 0 R
-63 0 V
stroke
798 3091 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1e-04)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 3536 M
63 0 V
6017 0 R
-63 0 V
stroke
798 3536 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.001)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 3982 M
63 0 V
6017 0 R
-63 0 V
stroke
798 3982 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.01)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 4427 M
63 0 V
6017 0 R
-63 0 V
stroke
798 4427 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 4872 M
63 0 V
6017 0 R
-63 0 V
stroke
798 4872 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
grestore
1.000 UL
LTb
882 420 M
0 63 V
0 4389 R
0 -63 V
stroke
882 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MCshow
grestore
1.000 UL
LTb
2402 420 M
0 63 V
0 4389 R
0 -63 V
stroke
2402 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (-0.5)]
] -46.7 MCshow
grestore
1.000 UL
LTb
3922 420 M
0 63 V
0 4389 R
0 -63 V
stroke
3922 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
grestore
1.000 UL
LTb
5442 420 M
0 63 V
0 4389 R
0 -63 V
stroke
5442 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.5)]
] -46.7 MCshow
grestore
1.000 UL
LTb
6962 420 M
0 63 V
0 4389 R
0 -63 V
stroke
6962 280 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
882 420 M
6080 0 V
0 4452 V
-6080 0 V
882 420 L
LTb
140 2646 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 140.0 0.0 true true 0 (log\(abs\(A)]
[(Helvetica) 112.0 -42.0 true true 0 (np)]
[(Helvetica) 140.0 0.0 true true 0 (\))]
] -32.7 MCshow
grestore
grestore
LTb
3922 70 M
gsave 0 setgray
[ [(Helvetica) 140.0 0.0 true true 0 (Frequency)]
] -46.7 MCshow
grestore
1.000 UP
1.000 UL
LT0
1916 420 M
0 800 V
3436 420 M
0 620 V
4956 420 M
0 428 V
6476 420 M
0 235 V
1946 420 M
0 666 V
3466 420 M
0 487 V
4986 420 M
0 307 V
6506 420 M
0 115 V
1976 420 M
0 1544 V
3496 420 M
0 1380 V
5016 420 M
0 1201 V
6536 420 M
0 1021 V
2007 420 M
0 1620 V
3527 420 M
0 1455 V
5047 420 M
0 1291 V
6567 420 M
0 1112 V
2037 420 M
0 2221 V
3557 420 M
0 2077 V
5077 420 M
0 1912 V
6597 420 M
0 1748 V
2068 420 M
0 2378 V
3588 420 M
0 2229 V
5108 420 M
0 2085 V
6628 420 M
0 1920 V
2098 420 M
0 2817 V
3618 420 M
0 2699 V
5138 420 M
0 2550 V
6658 420 M
0 2406 V
2128 420 M
0 3022 V
3648 420 M
0 2890 V
5168 420 M
0 2772 V
6688 420 M
0 2623 V
2159 420 M
0 3310 V
3679 420 M
0 3230 V
5199 420 M
0 3098 V
6719 420 M
0 2981 V
2189 420 M
0 3547 V
3709 420 M
0 3434 V
5229 420 M
0 3354 V
6749 420 M
0 3223 V
2220 420 M
0 3655 V
3740 420 M
0 3640 V
5260 420 M
0 3527 V
6780 420 M
0 3446 V
2250 420 M
0 3927 V
3770 420 M
0 3827 V
5290 420 M
0 3812 V
6810 420 M
0 3699 V
2280 420 M
0 3697 V
3800 420 M
0 3871 V
5320 420 M
0 3771 V
6840 420 M
0 3756 V
2311 420 M
0 4091 V
stroke
3831 420 M
0 3928 V
5351 420 M
0 4101 V
6871 420 M
0 4002 V
2341 420 M
0 3733 V
3861 420 M
0 3730 V
5381 420 M
0 3568 V
6901 420 M
0 3741 V
2372 420 M
0 3819 V
3892 420 M
0 4103 V
5412 420 M
0 4100 V
6932 420 M
0 3938 V
882 420 M
0 3504 V
2402 420 M
0 3833 V
3922 420 M
0 3467 V
5442 420 M
0 3751 V
6962 420 M
0 3748 V
912 420 M
0 4083 V
2432 420 M
0 3757 V
3952 420 M
0 4086 V
5472 420 M
0 3719 V
943 420 M
0 3885 V
2463 420 M
0 4099 V
3983 420 M
0 3773 V
5503 420 M
0 4102 V
973 420 M
0 3771 V
2493 420 M
0 3728 V
4013 420 M
0 3943 V
5533 420 M
0 3616 V
1004 420 M
0 3770 V
2524 420 M
0 3930 V
4044 420 M
0 3886 V
5564 420 M
0 4101 V
1034 420 M
0 3564 V
2554 420 M
0 3668 V
4074 420 M
0 3827 V
5594 420 M
0 3784 V
1064 420 M
0 3434 V
2584 420 M
0 3545 V
4104 420 M
0 3649 V
5624 420 M
0 3808 V
1095 420 M
0 3098 V
2615 420 M
0 3318 V
4135 420 M
0 3430 V
5655 420 M
0 3533 V
1125 420 M
0 2957 V
2645 420 M
0 3015 V
4165 420 M
0 3235 V
5685 420 M
0 3347 V
1156 420 M
0 2484 V
2676 420 M
0 2822 V
4196 420 M
0 2880 V
5716 420 M
0 3101 V
1186 420 M
0 2376 V
stroke
2706 420 M
0 2364 V
4226 420 M
0 2702 V
5746 420 M
0 2760 V
1216 420 M
0 1736 V
2736 420 M
0 2224 V
4256 420 M
0 2212 V
5776 420 M
0 2551 V
1247 420 M
0 1713 V
2767 420 M
0 1590 V
4287 420 M
0 2078 V
5807 420 M
0 2066 V
1277 420 M
0 685 V
2797 420 M
0 1545 V
4317 420 M
0 1422 V
5837 420 M
0 1910 V
1308 420 M
0 981 V
2828 420 M
0 519 V
4348 420 M
0 1379 V
5868 420 M
0 1256 V
1338 420 M
0 190 V
2858 420 M
0 800 V
4378 420 M
0 338 V
5898 420 M
0 1197 V
1368 420 M
0 192 V
2888 420 M
0 8 V
1520 -8 R
0 618 V
5928 420 M
0 155 V
31 -155 R
0 424 V
1.000 UL
LTb
882 420 M
6080 0 V
0 4452 V
-6080 0 V
882 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
